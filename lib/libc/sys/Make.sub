# Objects and include files from here

libksysobjs = InitStep.o LinuxCreds.o ProcessClient.o ProcessSet.o	   \
              ResMgrWrapper.o SMTMgr.o StubInitStep.o StubProcessClient.o  \
              StubProcessLinuxClient.o StubShMemBuf.o SystemMiscWrapper.o  \
              TAssert.o XInitStep.o XProcessClient.o XProcessLinuxClient.o \
              XShMemBuf.o g++sup.o ppccore.o 

sys_includes = systemAccess.H sysTypes.H sysIncs.H BaseProcess.H 	   \
	       ProcessWrapper.H ProcessSet.H ProcessSetUser.H macdefs.H    \
	       config.H types.H ppccore.H kinclude.H SysStatus.H TAssert.H \
	       ProcessClient.H ProcessLinux.H LinuxCreds.H ResMgrWrapper.H \
	       SystemMiscWrapper.H MountPointMgrClient.H 		   \
	       MountPointMgrCommon.H SMTMgr.H ProcessLinuxClient.H 	   \
	       ShMemBuf.H ShMemClnt.H InitStep.H Initialization.H 	   \
	       hostSysTypes.H bswap.h extRegs.H
sys_powerpc_includes = sysTypes.H macdefs.H config.H types.H ppccore.H 	   \
		       extRegs.H

lib_libc_sys_stubobjs = $(filter Stub%.o, $(libksysobjs))
lib_libc_sys_stubnames = $(patsubst Stub%.o, % ,$(lib_libc_sys_stubobjs))
lib_libc_sys_stubfiles = $(foreach stubname, $(lib_libc_sys_stubnames), $(call stubgen_objects, $(S)/lib/libc/sys,$(stubname)))

# Top-level variables that use need to know about these objs
OBJS += $(addprefix $(S)/lib/libc/sys/, $(libksysobjs)) \
        $(lib_libc_sys_stubfiles)

libkobjs += $(addprefix $(S)/lib/libc/sys/, $(libksysobjs))

lib_includes += $(addprefix $(O)/install/include/sys/, $(sys_includes))
lib_includes += $(addprefix $(O)/install/include/sys/arch/$(HOST)/, $(sys_$(HOST)_includes))

# Rules for building objects and installing include files

# Include files
$(O)/install/include/sys/%.h: $(H)/lib/libc/sys/%.h
	$(call status, INSTALL, $@)
	$(CP) $< $@
$(O)/install/include/sys/%.H: $(H)/lib/libc/sys/%.H
	$(call status, INSTALL, $@)
	$(CP) $< $@
$(O)/install/include/sys/arch/$(HOST)/%.H: $(H)/lib/libc/sys/arch/$(HOST)/%>H
	$(call status, INSTALL, $@)
	$(CP) $< $@

# Stub source files
lib_libc_sys_iflags = -I$(S)/lib/libc/sys	\
                      -I$(H)/lib/libc		\
                      -I$(H)/lib/libc/sys

$(call stubgen_targets, $(S)/lib/libc/sys): $(H)/lib/libc/sys/%.H
	$(call status, STUBGEN, $@)
	$(STUBGEN) $(HOST) $< -o $(shell dirname $@) \
		$(filter-out -MD, $(CXXFLAGS)) \
		-w -I. $(IFLAGS) $(lib_libc_sys_iflags) -D_IN_STUBGEN
	$(RM) -f $(shell basename $< .H).stubgen.d

# Object files

$(S)/lib/libc/sys/%.o: $(S)/lib/libc/sys/%.C
	$(call status, CXX, $@)
	$(CXX) $(CXXFLAGS) $(IFLAGS) $(lib_libc_sys_iflags) -c $< -o $@

$(S)/lib/libc/sys/%.o: $(H)/lib/libc/sys/%.C
	$(call status, CXX, $@)
	$(CXX) -c $(CXXFLAGS) $(IFLAGS) $(lib_libc_sys_iflags) $< -o $@

$(S)/lib/libc/sys/%.o: $(H)/lib/libc/sys/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(CXXFLAGS) $(IFLAGS) $(lib_libc_sys_iflags) -c $^ -o $@
