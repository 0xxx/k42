# Objects and include files from here

libkioobjs += DirBuf.o IO.o IOForkManager.o IORingBuffer.o MemTrans.o \
              PathName.o StubBlockDev.o StubCallBackObj.o             \
              StubFileLinuxClientStream.o StubFileLinuxServer.o       \
              StubMemTrans.o StubNameTreeLinux.o StubPAPageServer.o   \
              StubPacketServer.o StubSocketServer.o StubStreamServer.o\
              StubStreamServerTTY.o StubSysVMessagesClient.o          \
              StubVAPageServer.o StubVirtFile.o XBlockDev.o           \
              XCallBackObj.o XFileLinuxClientStream.o                 \
              XFileLinuxServer.o XMemTrans.o XNameTreeLinux.o         \
              XPAPageServer.o XStreamServer.o XStreamServerTTY.o      \
              XSysVMessagesClient.o XVAPageServer.o XVirtFile.o       \
              cprintf.o printfBuf.o

lib_libc_io_stubobjs = $(filter Stub%.o, $(libkioobjs))
lib_libc_io_stubnames = $(patsubst Stub%.o, % ,$(lib_libc_io_stubobjs))
lib_libc_io_stubfiles = $(foreach stubname, $(lib_libc_io_stubnames), $(call stubgen_objects, $(S)/lib/libc/io,$(stubname)))

# Top-level variables that use need to know about these objs

OBJS += $(addprefix $(S)/lib/libc/io/, $(libkioobjs)) \
        $(lib_libc_io_stubfiles)
libkobjs += $(addprefix $(S)/lib/libc/io/, $(libkioobjs))

# Rules for building objects and installing include files

# Include files
$(O)/install/include/io/%.H: $(H)/lib/libc/io/%.H
	$(call status, INSTALL, $@)
	$(CP) $< $@

# Stub source files
lib_libc_io_iflags = -I$(S)/lib/libc/io	\
                     -I$(H)/lib/libc		\
                     -I$(H)/lib/libc/io

$(call stubgen_targets, $(S)/lib/libc/io): $(H)/lib/libc/io/%.H
	$(call status, STUBGEN, $@)
	$(STUBGEN) $(HOST) $< -o $(shell dirname $@) \
		$(filter-out -MD, $(CXXFLAGS)) \
		-w -I. $(IFLAGS) $(lib_libc_io_iflags) -D_IN_STUBGEN
	$(RM) -f $(shell basename $< .H).stubgen.d

# Object files

$(S)/lib/libc/io/%.o: $(S)/lib/libc/io/%.C
	$(call status, CXX, $@)
	$(CXX) $(CXXFLAGS) $(IFLAGS) $(lib_libc_io_iflags) -c $< -o $@

$(S)/lib/libc/io/%.o: $(H)/lib/libc/io/%.C
	$(call status, CXX, $@)
	$(CXX) -c $(CXXFLAGS) $(IFLAGS) $(lib_libc_io_iflags) $< -o $@

$(S)/lib/libc/io/%.o: $(H)/lib/libc/io/arch/$(HOST)/%.S
	$(call status, AS, $@)
	$(CXX) $(CFLAGS) -D__ASSEMBLEY_ $(IFLAGS) $(lib_libc_io_iflags) -c $^ -o $@
