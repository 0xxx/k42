# Objects and include files from here

lib_usr_objs = GDBIOKern.o ProgExecArch.o ProgExecCommon.o align.o 	\
	      gdb-stub.o memoryMap.o runProcessCommon.o	

lib_usr_base_objs = $(filter-out GDBIOKern.o, $(lib_usr_objs)) \
		    GDBIO.o ProgExec.o userRunProcess.o entry.o

usr_includes = ProgExec.H runProcessCommon.H
usr_powerpc_includes = ProgExecArch.H

# Top-level variables that use need to know about these objs
OBJS += $(addprefix $(S)/lib/libc/usr/, $(lib_usr_objs) ProgExecUsr.o)
libk_objs += $(addprefix $(S)/lib/libc/usr/, $(lib_usr_objs))
libbase_objs += $(addprefix $(S)/lib/libc/usr/, $(lib_usr_base_objs))
bootstrap_incs += $(addprefix $(O)/install/include/usr/, $(usr_includes))
bootstrap_incs +=  $(addprefix $(O)/install/include/usr/arch/$(HOST)/, $(usr_$(HOST)_includes))
bootstrap_incs += $(O)/install/include/sys/GDBIO.H

# Rules for building objects and installing include files

# Include files
$(O)/install/include/sys/%.H: $(H)/lib/libc/usr/%.H
	$(call status, INSTALL, $@)
	$(CP) $< $@

# Object files

lib_libc_usr_iflags = -I$(S)/lib/libc/usr	\
                       -I$(H)/lib/libc		\
                       -I$(H)/lib/libc/usr

$(S)/lib/libc/usr/%.o: IFLAGS += $(lib_libc_usr_iflags)

$(S)/lib/libc/usr/%.o: $(H)/lib/libc/usr/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(CXXFLAGS) $(IFLAGS) -c $^ -o $@

$(S)/lib/libc/usr/%.o: $(H)/lib/libc/usr/arch/$(HOST)/%.S
	$(call status, AS, $@)
	$(CXX) $(CFLAGS) -D__ASSEMBLEY_ $(IFLAGS) -c $^ -o $@
