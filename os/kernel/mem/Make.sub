OBJS += $(S)/os/kmemobjs.o
kmemobjs = StubRegionDefault.o StubFR.o StubRegionPerProcessor.o	\
           StubRegionRedZone.o StubFRComputation.o			\
           StubFRKernelPinned.o StubFRPA.o StubFRVA.o			\
           StubRegionFSComm.o StubRegionReplicated.o StubFRCRW.o	\
           StubFRLTransTable.o StubKernelPagingTransport.o		\
           StubKernelPagingTransportPA.o StubKernelPagingTransportVA.o	\
           XFR.o InvertedPageTable.o CopyPage.o	\
           PageAllocatorKernPinned.o PageAllocatorKernUnpinned.o	\
           RegionDefault.o RegionReplicated.o RegionPerProcessor.o	\
           PageFaultTest.o FR.o FRPlaceHolder.o FCMStartup.o FCM.o	\
           FCMDefault.o FCMFile.o FCMDefaultRoot.o FCMReal.o		\
           FCMComputation.o FCMPrimitiveKernel.o FCMFixed.o		\
           FCMPrimitive.o FCMSharedTrivial.o FCMPartitionedTrivial.o	\
           FCMCommon.o FCMCommonMultiRep.o FCMCommonMultiRepRoot.o	\
           FCMDefaultMultiRep.o FCMDefaultMultiRepRoot.o		\
           FCMPrimitiveKernelMultiRep.o					\
           FCMPrimitiveKernelMultiRepRoot.o PageDescData.o PageList.o	\
           SegmentTable.o PageSet.o PageSetDense.o SegmentHATPrivate.o	\
           HATDefault.o HATKernel.o FRVA.o FRPA.o FRPANonPageable.o	\
           FRPANonPageableRamOnly.o FRCRW.o RegionRedZone.o		\
           PageFaultNotification.o FRComputation.o FRCommon.o		\
           FRKernelPinned.o PMRoot.o FreeFrameList.o PMLeaf.o PMKern.o	\
           RegionFSComm.o VAllocServicesKern.o MemDescKern.o		\
           AllocRegionManagerKern.o PMallocKern.o PageCopy.o Pin.o	\
           FRLTransTable.o FCMLTransTable.o RegionList.o		\
           SharedBufferProducerKernel.o SharedBufferConsumerKernel.o	\
           KernelPagingTransport.o KernelPagingTransportPA.o		\
           KernelPagingTransportVA.o PMLeafExp.o PMLeafChunk.o		\
           FreeFrameListChunk.o SyncService.o XRegionDefault.o		\
           XRegionPerProcessor.o XRegionRedZone.o XFRComputation.o	\
           XFRKernelPinned.o XFRPA.o XFRVA.o XRegionFSComm.o		\
           XRegionReplicated.o XFRCRW.o XFRLTransTable.o		\
           XKernelPagingTransport.o XKernelPagingTransportPA.o		\
           XKernelPagingTransportVA.o
$(S)/os/kmemobjs.o: $(addprefix $(S)/os/kernel/mem/, $(kmemobjs))

lib_mem_objs += StubFR.o StubFRCRW.o StubFRComputation.o StubFRKernelPinned.o \
           StubFRLTransTable.o StubFRPA.o StubFRVA.o			     \
	   StubKernelPagingTransport.o StubKernelPagingTransportPA.o	     \
           StubKernelPagingTransportVA.o StubRegionDefault.o 		     \
	   StubRegionFSComm.o StubRegionPerProcessor.o StubRegionRedZone.o   \
           StubRegionReplicated.o XFR.o					   
lib_mem_includes = Access.H RegionType.H FR.H KernelPagingTransport.H \
           SharedBufferProducerKernel.H SharedBufferConsumerKernel.H

# kmemobjs.o subobjects
OBJS += $(addprefix $(S)/os/kernel/mem/, $(kmemobjs))
libk_objs += $(addprefix $(S)/os/kernel/mem/, $(lib_mem_objs))
libbase_objs += $(addprefix $(S)/os/kernel/mem/, $(lib_mem_objs))
bootstrap_incs += $(addprefix $(O)/install/include/mem/, $(lib_mem_includes))
bootstrap_incs += $(O)/install/include/mem/arch/$(HOST)/Access.H

# Add each stub in kmemobjs to the list of objects to make/clean
kernel_mem_stubobjs = $(filter Stub%.o, $(kmemobjs))
kernel_mem_stubnames = $(patsubst Stub%.o, % ,$(kernel_mem_stubobjs))
OBJS += $(foreach stubname, $(kernel_mem_stubnames), $(call stubgen_objects, $(S)/os/kernel/mem,$(stubname)))

# Should these flags be based off of $(kflags), etc?
kernel_mem_cxxflags = $(CXXFLAGS) -MD -DKERNEL 
kernel_mem_cflags = $(CFLAGS) -DKERNEL 
kernel_mem_iflags = -I$(H)/os/kernel -I$(H)/os/kernel/mem $(IFLAGS)

$(call stubgen_targets, $(S)/os/kernel/mem): $(H)/os/kernel/mem/%.H
	$(call status, STUBGEN, $@)
	$(STUBGEN) $(HOST) $< -o $(shell dirname $@) \
		$(filter-out -MD, $(kernel_mem_cxxflags)) \
		-w -I. $(kernel_mem_iflags) -D_IN_STUBGEN
	$(RM) -f $(shell basename $< .H).stubgen.d

$(S)/os/kernel/mem/%.o: $(S)/os/kernel/mem/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_mem_cxxflags) $(kernel_mem_iflags) -c $^ -o $@

$(S)/os/kernel/mem/%.o: $(S)/os/kernel/mem/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_mem_cxxflags) $(kernel_mem_iflags) -c $^ -o $@

$(S)/os/kernel/mem/%.o: $(H)/os/kernel/mem/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_mem_cxxflags) $(kernel_mem_iflags) -c $^ -o $@

$(S)/os/kernel/mem/%.o: $(H)/os/kernel/mem/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_mem_cxxflags) $(kernel_mem_iflags) -c $^ -o $@

$(S)/os/kernel/mem/%.o: $(H)/os/kernel/mem/arch/$(HOST)/%.S
	$(call status, AS, $@)
	$(CXX) $(kernel_mem_cflags) $(CFLAGS) -D__ASSEMBLEY_ $(kernel_mem_iflags) -c $^ -o $@

$(O)/install/include/mem/%.H: $(H)/os/kernel/mem/%.H
	$(call status, INSTALL, $@)
	$(CP) $< $@

$(O)/install/include/mem/arch/$(HOST)/%.H: $(H)/os/kernel/mem/arch/$(HOST)/%.H
	$(call status, INSTALL, $@)
	$(CP) $< $@
