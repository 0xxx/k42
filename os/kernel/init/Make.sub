lib_init_objs = StubAsyncTester.o StubInitServer.o StubServerState.o \
		XAsyncTester.o

kinitobjs = StubAsyncTester.o StubServerState.o StubInitServer.o	\
            XAsyncTester.o locore.o MPinit.o KernelInit.o		\
            AsyncTester.o SysFacts.o idt.o memoryMapKern.o kinit.o	\
            initKernelMappings.o KernelExit.o XServerState.o		\
            XInitServer.o ServerState.o InitServer.o

$(S)/os/kinitobjs.o: $(addprefix $(S)/os/kernel/init/, $(kinitobjs))

libk_objs += $(addprefix $(S)/os/kernel/init/, $(lib_init_objs))
libbase_objs += $(addprefix $(S)/os/kernel/init/, $(lib_init_objs))

# kinitobjs.o subobjects
OBJS += $(S)/os/kinitobjs.o
OBJS += $(addprefix $(S)/os/kernel/init/, $(kinitobjs))
OBJS += $(addprefix $(S)/os/kernel/init/, $(lib_init_objs))
OBJS += $(call stubgen_objects, $(S)/os/kernel/init,AsyncTester)
OBJS += $(call stubgen_objects, $(S)/os/kernel/init,ServerState)
OBJS += $(call stubgen_objects, $(S)/os/kernel/init,InitServer)
bootstrap_gens += $(call stubgen_headers,AsyncTester)
bootstrap_gens += $(call stubgen_headers,ServerState)
bootstrap_gens += $(call stubgen_headers,InitServer)

kernel_init_iflags = -I$(H)/os/kernel -I$(H)/os/kernel/init -I$(IMG)/usr/powerpc64-linux/include

$(call stubgen_targets, $(S)/os/kernel/init): $(H)/os/kernel/init/%.H
	$(call status, STUBGEN, $@)
	$(STUBGEN) $(HOST) $< -o $(S)/os/kernel/init \
		$(filter-out -MD, $(CXXFLAGS)) -DKERNEL \
		-w -I. $(kernel_init_iflags) $(IFLAGS) -D_IN_STUBGEN
	$(RM) -f $(shell basename $< .H).stubgen.d

$(S)/os/kernel/init/%.o: CXXFLAGS += -DKERNEL -MD
$(S)/os/kernel/init/%.o: CFLAGS += -DKERNEL
$(S)/os/kernel/init/%.o: IFLAGS += $(kernel_init_iflags)

$(S)/os/kernel/init/%.E: $(H)/os/kernel/init/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) -E $(CXXFLAGS) $(IFLAGS) $< -o $@

$(S)/os/kernel/init/%.o: $(S)/os/kernel/init/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(CXXFLAGS) $(IFLAGS) -c $^ -o $@

$(S)/os/kernel/init/%.o: $(H)/os/kernel/init/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(CXXFLAGS) $(IFLAGS) -c $^ -o $@

$(S)/os/kernel/init/%.o: $(H)/os/kernel/init/arch/$(HOST)/%.S
	$(call status, AS, $@)
	$(CC) $(CFLAGS) -D__ASSEMBLEY_ $(IFLAGS) -c $^ -o $@

$(STUBGEN_INC)/%: $(S)/os/kernel/init/%
	$(call status, INSTALL, $@)
	$(CP) $< $@
