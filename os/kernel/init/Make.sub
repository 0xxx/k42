
OBJS += $(S)/os/kinitobjs.o
kinitobjs = StubAsyncTester.o StubServerState.o StubInitServer.o	\
            XAsyncTester.o locore.o MPinit.o KernelInit.o		\
            AsyncTester.o SysFacts.o idt.o memoryMapKern.o kinit.o	\
            initKernelMappings.o KernelExit.o XServerState.o		\
            XInitServer.o ServerState.o InitServer.o
$(S)/os/kinitobjs.o: $(addprefix $(S)/os/kernel/init/, $(kinitobjs))

libk_objs += $(S)/os/kernel/init/StubAsyncTester.o			   \
            $(S)/os/kernel/init/StubInitServer.o			   \
            $(S)/os/kernel/init/StubServerState.o			   \
            $(S)/os/kernel/init/XAsyncTester.o	

# kinitobjs.o subobjects
OBJS += $(addprefix $(S)/os/kernel/init/, $(kinitobjs))
OBJS += $(call stubgen_objects, $(S)/os/kernel/init,AsyncTester)
OBJS += $(call stubgen_objects, $(S)/os/kernel/init,ServerState)
OBJS += $(call stubgen_objects, $(S)/os/kernel/init,InitServer)

kernel_init_cxxflags = $(CXXFLAGS) -MD -DKERNEL 
kernel_init_iflags = -I$(H)/os/kernel -I$(H)/os/kernel/init -I$(IMG)/use/powerpc64-linux/include $(IFLAGS)

$(call stubgen_targets, $(S)/os/kernel/init): $(H)/os/kernel/init/%.H
	$(call status, STUBGEN, $@)
	$(STUBGEN) $(HOST) $< -o $(shell dirname $@) \
		$(filter-out -MD, $(kernel_init_cxxflags)) \
		-w -I. $(kernel_init_iflags) -D_IN_STUBGEN
	$(RM) -f $(shell basename $< .H).stubgen.d

$(S)/os/kernel/init/%.o: $(S)/os/kernel/init/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_init_cxxflags) $(kernel_init_iflags) -c $^ -o $@

$(S)/os/kernel/init/%.E: $(H)/os/kernel/init/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) -E $(kernel_init_cxxflags) $(kernel_init_iflags) $< -o $@

$(S)/os/kernel/init/%.o: $(S)/os/kernel/init/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_init_cxxflags) $(kernel_init_iflags) -c $^ -o $@

$(S)/os/kernel/init/%.o: $(H)/os/kernel/init/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_init_cxxflags) $(kernel_init_iflags) -c $^ -o $@

$(S)/os/kernel/init/%.o: $(H)/os/kernel/init/arch/$(HOST)/%.C
	$(call status, CXX, $@)
	$(CXX) $(kernel_init_cxxflags) $(kernel_init_iflags) -c $^ -o $@

$(S)/os/kernel/init/%.o: $(H)/os/kernel/init/arch/$(HOST)/%.S
	$(call status, AS, $@)
	$(CXX) -MD $(CFLAGS) -D__ASSEMBLEY_ $(kernel_init_iflags) -c $^ -o $@
