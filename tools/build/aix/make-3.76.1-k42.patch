diff -Naur -X xdiff make-3.76.1/arscan.c make-3.76.1.orig/arscan.c
--- make-3.76.1/arscan.c	Fri Feb 11 18:11:07 2000
+++ make-3.76.1.orig/arscan.c	Wed Aug 27 16:31:04 1997
@@ -212,23 +212,6 @@
 #endif
 #endif
 
-/* On AIX, define these symbols to be sure to get both archive formats.
-   AIX 4.3 introduced the "big" archive format to support 64-bit object
-   files, so on AIX 4.3 systems we need to support both the "normal" and
-   "big" archive formats.  An archive's format is indicated in the
-   "fl_magic" field of the "FL_HDR" structure.  For a normal archive,
-   this field will be the string defined by the AIAMAG symbol.  For a
-   "big" archive, it will be the string defined by the AIAMAGBIG symbol
-   (at least on AIX it works this way).
-
-   Note: we'll define these symbols regardless of which AIX version
-   we're compiling on, but this is okay since we'll use the new symbols
-   only if they're present.  */
-#ifdef _AIX
-# define __AR_SMALL__
-# define __AR_BIG__
-#endif
-
 #include <ar.h>
 
 /* Cray's <ar.h> apparently defines this.  */
@@ -271,10 +254,6 @@
 {
 #ifdef AIAMAG
   FL_HDR fl_header;
-#ifdef AIAMAGBIG
-  int big_archive = 0;
-  FL_HDR_BIG fl_header_big;
-#endif
 #else
   int long_name = 0;
 #endif
@@ -296,42 +275,11 @@
 #ifdef AIAMAG
   {
     register int nread = read (desc, (char *) &fl_header, FL_HSZ);
-
-    if (nread != FL_HSZ)
+    if (nread != FL_HSZ || bcmp (fl_header.fl_magic, AIAMAG, SAIAMAG))
       {
 	(void) close (desc);
 	return -2;
       }
-#ifdef AIAMAGBIG
-    /* If this is a "big" archive, then set the flag and
-       re-read the header into the "big" structure. */
-    if (!bcmp (fl_header.fl_magic, AIAMAGBIG, SAIAMAG))
-      {
-	big_archive = 1;
-
-	/* seek back to beginning of archive */
-	if (lseek (desc, 0, 0) < 0)
-	  {
-	    (void) close (desc);
-	    return -2;
-	  }
-
-	/* re-read the header into the "big" structure */
-	nread = read (desc, (char *) &fl_header_big, FL_HSZ_BIG);
-	if (nread != FL_HSZ_BIG)
-	  {
-	    (void) close (desc);
-	    return -2;
-	  }
-      }
-    else
-#endif
-       /* Check to make sure this is a "normal" archive. */
-      if (bcmp (fl_header.fl_magic, AIAMAG, SAIAMAG))
-	{
-          (void) close (desc);
-          return -2;
-	}
   }
 #else
   {
@@ -359,18 +307,8 @@
     long int member_offset;
     long int last_member_offset;
 
-#ifdef AIAMAGBIG
-    if ( big_archive )
-      {
-	sscanf (fl_header_big.fl_fstmoff, "%20ld", &member_offset);
-	sscanf (fl_header_big.fl_lstmoff, "%20ld", &last_member_offset);
-      }
-    else
-#endif
-      {
-	sscanf (fl_header.fl_fstmoff, "%12ld", &member_offset);
-	sscanf (fl_header.fl_lstmoff, "%12ld", &last_member_offset);
-      }
+    sscanf (fl_header.fl_fstmoff, "%12ld", &member_offset);
+    sscanf (fl_header.fl_lstmoff, "%12ld", &last_member_offset);
 
     if (member_offset == 0)
       {
@@ -391,9 +329,6 @@
       {
 	register int nread;
 	struct ar_hdr member_header;
-#ifdef AIAMAGBIG
-	struct ar_hdr_big member_header_big;
-#endif
 #ifdef AIAMAG
 	char name[256];
 	int name_len;
@@ -416,74 +351,35 @@
 	  }
 
 #ifdef AIAMAG
-#define       AR_MEMHDR_SZ(x) (sizeof(x) - sizeof (x._ar_name))
+#define	AR_MEMHDR	(AR_HDR_SIZE - sizeof (member_header._ar_name))
+	nread = read (desc, (char *) &member_header, AR_MEMHDR);
 
-#ifdef AIAMAGBIG
-	if (big_archive)
+	if (nread != AR_MEMHDR)
 	  {
-	    nread = read (desc, (char *) &member_header_big,
-			  AR_MEMHDR_SZ(member_header_big) );
+	    (void) close (desc);
+	    return -2;
+	  }
 
-	    if (nread != AR_MEMHDR_SZ(member_header_big))
-	      {
-		(void) close (desc);
-		return -2;
-	      }
-
-	    sscanf (member_header_big.ar_namlen, "%4d", &name_len);
-	    nread = read (desc, name, name_len);
-
-	    if (nread != name_len)
-	      {
-		(void) close (desc);
-		return -2;
-	      }
-
-	    name[name_len] = 0;
-
-	    sscanf (member_header_big.ar_date, "%12ld", &dateval);
-	    sscanf (member_header_big.ar_uid, "%12d", &uidval);
-	    sscanf (member_header_big.ar_gid, "%12d", &gidval);
-	    sscanf (member_header_big.ar_mode, "%12o", &eltmode);
-	    sscanf (member_header_big.ar_size, "%20ld", &eltsize);
+	sscanf (member_header.ar_namlen, "%4d", &name_len);
+	nread = read (desc, name, name_len);
 
-	    data_offset = (member_offset + AR_MEMHDR_SZ(member_header_big)
-			   + name_len + 2);
-	  }
-	else
-#endif
+	if (nread != name_len)
 	  {
-	    nread = read (desc, (char *) &member_header,
-			  AR_MEMHDR_SZ(member_header) );
+	    (void) close (desc);
+	    return -2;
+	  }
 
-	    if (nread != AR_MEMHDR_SZ(member_header))
-	      {
-		(void) close (desc);
-		return -2;
-	      }
-
-	    sscanf (member_header.ar_namlen, "%4d", &name_len);
-	    nread = read (desc, name, name_len);
-
-	    if (nread != name_len)
-	      {
-		(void) close (desc);
-		return -2;
-	      }
-
-	    name[name_len] = 0;
-
-	    sscanf (member_header.ar_date, "%12ld", &dateval);
-	    sscanf (member_header.ar_uid, "%12d", &uidval);
-	    sscanf (member_header.ar_gid, "%12d", &gidval);
-	    sscanf (member_header.ar_mode, "%12o", &eltmode);
-	    sscanf (member_header.ar_size, "%12ld", &eltsize);
+	name[name_len] = 0;
 
-	    data_offset = (member_offset + AR_MEMHDR_SZ(member_header)
-			   + name_len + 2);
-	  }
-	data_offset += data_offset % 2;
+	sscanf (member_header.ar_date, "%12ld", &dateval);
+	sscanf (member_header.ar_uid, "%12d", &uidval);
+	sscanf (member_header.ar_gid, "%12d", &gidval);
+	sscanf (member_header.ar_mode, "%12o", &eltmode);
+	sscanf (member_header.ar_size, "%12ld", &eltsize);
 
+	if ((data_offset = member_offset + AR_MEMHDR + name_len + 2) % 2)
+	    ++data_offset;
+
 	fnval =
 	  (*function) (desc, name, 0,
 		       member_offset, data_offset, eltsize,
@@ -596,12 +492,7 @@
 	  /* End of the chain.  */
 	  break;
 
-#ifdef AIAMAGBIG
-	if (big_archive)
-          sscanf (member_header_big.ar_nxtmem, "%20ld", &member_offset);
-	else
-#endif
-	  sscanf (member_header.ar_nxtmem, "%12ld", &member_offset);
+	sscanf (member_header.ar_nxtmem, "%12ld", &member_offset);
 
 	if (lseek (desc, member_offset, 0) != member_offset)
 	  {
diff -Naur -X xdiff make-3.76.1/getloadavg.c make-3.76.1.orig/getloadavg.c
--- make-3.76.1/getloadavg.c	Fri Feb 11 17:26:52 2000
+++ make-3.76.1.orig/getloadavg.c	Tue Jul 22 17:35:43 1997
@@ -1,119 +1,3 @@
-#define SEM_INITVAL	10000
-
-#include <sys/types.h>
-#include <stdio.h>
-#include <sys/ipc.h>
-#include <sys/sem.h>
-#include <sys/stat.h>
-#include <errno.h>
-#include <unistd.h>
-#include <stdlib.h>
-#include <pwd.h>
-#include <fcntl.h>
-#include <limits.h>
-
-static int SemID = -1;
-
-static int getsemid()
-{
-    key_t semkey;
-    int semid;
-    struct sembuf sbuf;
-
-    if (SemID != -1) return SemID;
-    
-    /* Get unique key for semaphore */
-    if ((semkey = ftok ("/tmp", getuid())) == (key_t) -1) {
-	perror ("IPC error: ftok"); exit (1);
-    }
-
-    /* Get semaphore ID associated with this key */
-    if ((semid = semget (semkey, 0, 0)) == -1) {      
-	
-	/* Semaphore does not exist - Create */
-	if ((semid = semget (semkey, 1, IPC_CREAT | IPC_EXCL | S_IRUSR |
-			     S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH |
-			     S_IWOTH)) != -1) {
-	    /* Initialize the semaphore */
-	    sbuf.sem_num = 0;
-	    sbuf.sem_op = SEM_INITVAL;
-	    sbuf.sem_flg = 0;
-	    if (semop (semid, &sbuf, 1) == -1) {
-		perror ("IPC error: semop"); exit (1);
-	    }
-	} else if (errno == EEXIST) {         
-	    if ((semid = semget (semkey, 0, 0)) == -1) {
-		perror ("IPC error 1: semget"); exit (1);
-	    }
-	} else {
-	    perror ("IPC error 2: semget"); exit (1);
-	}
-    }
-
-    SemID = semid;
-
-    return semid;
-}
-
-static void decsem(int semid)
-{
-    struct sembuf sbuf;
-
-    sbuf.sem_num = 0;
-    sbuf.sem_op = -1;
-    sbuf.sem_flg = SEM_UNDO|IPC_NOWAIT;
-    if (semop (semid, &sbuf, 1) == -1) {
-	perror ("IPC Error: semop"); exit (1);
-    }
-}
-
-static void incsem(int semid)
-{
-    struct sembuf sbuf;
-
-    sbuf.sem_num = 0;
-    sbuf.sem_op = 1;
-    sbuf.sem_flg = SEM_UNDO|IPC_NOWAIT;
-    if (semop (semid, &sbuf, 1) == -1) {
-	perror ("IPC Error: semop"); exit (1);
-    }
-}
-
-static int countsem(int semid)
-{
-    int val = semctl(semid, 0, GETVAL);
-    return SEM_INITVAL - val;
-}
-
-
-void mregister_child(int pid)
-{
-    /*printf("->registering child %d\n", pid);*/
-    decsem(getsemid());
-}
-    
-void munregister_child(int pid)
-{
-    /*printf("<-unregistering child %d\n", pid);*/
-    incsem(getsemid());
-}
-    
-
-int
-getloadavg (loadavg, nelem)
-     double loadavg[];
-     int nelem;
-{
-    int retcnt = countsem(getsemid());
-
-    loadavg[0]=(double) retcnt;
-    return 1;
-}
-
-
-#if 0
-
-
 /* Get the system load averages.
    Copyright (C) 1985, 86, 87, 88, 89, 91, 92, 93, 1994, 1995, 1997
    	Free Software Foundation, Inc.
@@ -1185,6 +1069,3 @@
   exit (0);
 }
 #endif /* TEST */
-
-
-#endif
diff -Naur -X xdiff make-3.76.1/job.c make-3.76.1.orig/job.c
--- make-3.76.1/job.c	Fri Feb 11 17:29:12 2000
+++ make-3.76.1.orig/job.c	Fri Sep  5 17:01:57 1997
@@ -163,9 +163,6 @@
 #endif
 #endif
 
-void mregister_child(int pid);
-void munregister_child(int pid);
-
 extern char *allocated_variable_expand_for_file PARAMS ((char *line, struct file *file));
 
 extern int getloadavg PARAMS ((double loadavg[], int nelem));
@@ -593,12 +590,6 @@
 		    (unsigned long int) c,
 		    c->pid, c->remote ? " (remote)" : "");
 
-
-	  if (c->mregistered) munregister_child(c->pid);
-
-
-
-
 	  /* Block fatal signals while frobnicating the list, so that
 	     children and job_slots_used are always consistent.  Otherwise
 	     a fatal signal arriving after the child is off the chain and
@@ -1101,14 +1092,6 @@
 		(unsigned long int) c,
 		c->pid, c->remote ? " (remote)" : "");
       children = c;
-
-      if( job_slots_used > 0 ) {
-	  mregister_child(c->pid);
-	  c->mregistered = 1;
-      }
-
-
-
       /* One more job slot is in use.  */
       ++job_slots_used;
       unblock_sigs ();
@@ -1268,10 +1251,6 @@
   c->command_line = 0;
   c->command_ptr = 0;
   c->environment = 0;
-
-
-  c->mregistered = 0;
-
 
   /* Fetch the first command line to be run.  */
   job_next_command (c);
diff -Naur -X xdiff make-3.76.1/job.h make-3.76.1.orig/job.h
--- make-3.76.1/job.h	Fri Feb 11 17:29:48 2000
+++ make-3.76.1.orig/job.h	Sat Jun 22 17:42:15 1996
@@ -44,12 +44,6 @@
 
     unsigned int good_stdin:1;	/* Nonzero if this child has a good stdin.  */
     unsigned int deleted:1;	/* Nonzero if targets have been deleted.  */
-
-
-    unsigned int mregistered:1;  /* Nonzero if child registered for loadavg. */
-
-      
-
   };
 
 extern struct child *children;
